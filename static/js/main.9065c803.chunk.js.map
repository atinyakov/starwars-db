{"version":3,"sources":["components/header/index.js","components/header/header.js","components/item-list/index.js","components/item-list/item-list.js","services/swapi/index.js","services/swapi/swapi.js","services/spinner/index.js","services/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/person-details/index.js","components/person-details/person-details.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","href","ItemList","Component","SwapiService","_apiBase","url","fetch","this","res","ok","Error","json","getResource","results","map","_transformPerson","id","person","_transformPlanet","planet","_transformStarship","starship","item","match","_extractId","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","lenght","crew","passengers","cargoCapacity","gender","birthYear","eyeColor","Spinner","ErrorIndicator","RandomPlanet","swapiService","state","loading","error","onError","setState","onPlanetLoaded","updatePlanet","Math","floor","random","getPlanet","then","catch","hasData","errorMessage","spinner","content","PlanetView","getPictureURL","response","console","log","Fragment","src","PersonDetails","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9065c803.chunk.js","sourcesContent":["import Header from './header'\r\n\r\nexport default Header;","import React from \"react\";\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header d-flex\">\r\n            <h3>\r\n                <a href=\"#\">\r\n                    Star DB\r\n                </a>\r\n            </h3>\r\n            <ul className=\"d-flex\">\r\n                <li>\r\n                    <a href=\"#\">People</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Planets</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Starships</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header","import ItemList from \"./item-list\";\r\n\r\nexport default ItemList;","import React, { Component } from \"react\";\r\nimport './item-list.css'\r\n\r\nexport default class ItemList extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"item-list list-group\">\r\n                <li className=\"list-group-item\">\r\n                Luke Skywalker\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                Darth Vader\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                R2-D2\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n}","import SwapiService from './swapi';\r\n\r\nexport default SwapiService;","class SwapiService {\r\n\r\n    _apiBase= \"https://swapi.co/api\"\r\n\r\n    async getResource (url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n    \r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch`);\r\n        }\r\n    \r\n        return await res.json();\r\n    }\r\n\r\n    async getAllPeople() {\r\n        const res = this.getResource(`/people/`);\r\n        return res.results.map(this._transformPerson);\r\n    }\r\n\r\n    async getPerson(id) {\r\n        const person = this.getResource(`/people/${id}`);\r\n        return this._transformPerson(person)\r\n    }\r\n\r\n    async getAllPlanets(){\r\n        const res =  this.getResource(`/planets/`);\r\n        return res.results.map(this._transformPlanet);\r\n    }\r\n\r\n    async getPlanet(id){\r\n        const planet = await this.getResource(`/planets/${id}`)\r\n        return this._transformPlanet(planet);\r\n    }\r\n\r\n    async getAllStarships(){\r\n        const res =  await this.getResource(`/starships/`);\r\n        return res.results.map(this._transformStarship);\r\n    }\r\n\r\n    async getStarships(id){\r\n        const starship = this.getResource(`/starships/${id}`);\r\n        return this._transformStarship(starship);\r\n    }\r\n\r\n    async getPictureURL(id){\r\n        const res = await fetch(`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`);\r\n        \r\n        if(!res.ok) {\r\n            return 'https://starwars-visualguide.com/assets/img/big-placeholder.jpg'\r\n        }\r\n    \r\n        return `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`\r\n    }\r\n\r\n\r\n    _extractId(item) {\r\n        const idRegexp = /\\/([0-9]*)\\/$/;\r\n        return item.url.match(idRegexp)[1];\r\n    }\r\n\r\n\r\n    _transformPlanet(planet) {\r\n        return {\r\n            id: this._extractId(planet),\r\n            name: planet.name,\r\n            population: planet.population,\r\n            rotationPeriod: planet.rotation_period,\r\n            diameter: planet.diameter\r\n        };\r\n    };\r\n\r\n    _transformStarship(starship) {\r\n        return {\r\n            id: this._extractId(starship),\r\n            name: starship.name,\r\n            model: starship.model,\r\n            manufacturer: starship.manufacturer,\r\n            costInCredits: starship.costInCredits,\r\n            lenght: starship.lenght,\r\n            crew: starship.crew,\r\n            passengers: starship.passengers,\r\n            cargoCapacity: starship.cargoCapacity\r\n        }\r\n    }\r\n\r\n    _transformPerson(person) {\r\n        return {\r\n            id: this._extractId(person),\r\n            name: person.name,\r\n            gender: person.gender,\r\n            birthYear: person.birthYear,\r\n            eyeColor: person.eyeColor\r\n        }\r\n    }\r\n}\r\n\r\nexport default SwapiService;","import Spinner from './spinner'\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n\r\n    return (\r\n    <div className=\"lds-css ng-scope\">\r\n        <div className=\"lds-rolling\">\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator'\r\n\r\nexport default ErrorIndicator;","import React from 'react'\r\nimport './error-indicator.css'\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <p className=\"error\">Ooops...Something went wrong</p>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import './random-planet.css'\r\nimport React, { Component } from 'react';\r\nimport SwapiService from '../../services/swapi'\r\nimport Spinner from '../../services/spinner'\r\nimport ErrorIndicator from '../error-indicator'\r\n\r\nexport default class RandomPlanet extends Component {\r\n    constructor() {\r\n        super();\r\n        this.updatePlanet();\r\n    }\r\n\r\n\r\n    swapiService = new SwapiService;\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({\r\n            planet,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n\r\n    updatePlanet() {\r\n        const id = Math.floor(Math.random()*25) + 2;\r\n        // const id = 12000;\r\n\r\n\r\n        this.swapiService\r\n            .getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    render() {\r\n        const { planet, loading, error } = this.state;\r\n\r\n        const hasData = !(loading || error)\r\n        const errorMessage = error ? <ErrorIndicator /> : null\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = hasData ? <PlanetView planet={planet}/> : null\r\n\r\n        return (\r\n            <div className=\"random-planet jumbotron rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content} \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst PlanetView = ({planet}) => {\r\n    const swapiService = new SwapiService;\r\n\r\n    const {id, name, population, rotationPeriod, diameter} = planet;\r\n    const url = swapiService.getPictureURL(id).then(response => {\r\n        console.log(response);\r\n        return response;\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <img className=\"planet-image\" src={url} />\r\n            <div>\r\n                <h4>{name}</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Population</span>\r\n                        <span>{population}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Rotation Period</span>\r\n                        <span>{rotationPeriod}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Diameter</span>\r\n                        <span>{diameter}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </React.Fragment> \r\n    )\r\n}","import RandomPlanet from './random-planet'\r\n\r\nexport default RandomPlanet;","import PersonDetails from './person-details'\r\n\r\nexport default PersonDetails;","import React, { Component } from 'react';\r\nimport './person-details.css'\r\n\r\n\r\nexport default class PersonDetails extends Component {\r\n\r\n    render() {\r\n    return (\r\n            <div className=\"person-details card\">\r\n            <img className=\"person-image\"\r\n                src=\"https://starwars-visualguide.com/assets/img/characters/3.jpg\" />\r\n    \r\n            <div className=\"card-body\">\r\n                <h4>R2-D2</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Gender</span>\r\n                    <span>male</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Birth Year</span>\r\n                    <span>43</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"term\">Eye Color</span>\r\n                    <span>red</span>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import App from './app'\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport Header from '../header';\r\nimport ItemList from '../item-list';\r\nimport RandomPlanet from '../random-planet';\r\nimport PersonDetails from '../person-details';\r\nimport './app.css'\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <RandomPlanet />\r\n    \r\n            <div className=\"row mb2\">\r\n            <div className=\"col-md-6\">\r\n                <ItemList />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <PersonDetails />\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}